@import './variables';

// <= 767
@mixin isPhone {
  @warn "don't use it (adapt UI from mobile to desktop)";
  @media (max-width: 767px) {
    @content;
  }
}

// > 540
@mixin isLargePhone {
  @media (min-width: 540px) {
    @content;
  }
}

// > 768
@mixin isTablet {
  @media (min-width: 768px) {
    @content;
  }
}

// > 1280
@mixin isSmallDesktop {
  @media (min-width: 1280px) {
    @content;
  }
}

// > 1440
@mixin isMediumDesktop {
  @media (min-width: 1440px) {
    @content;
  }
}

// > 1920
@mixin isLargeDesktop {
  @media (min-width: 1920px) {
    @content;
  }
}

@mixin transportColors($property, $isGlobal: true) {
  @if $isGlobal == true {
    :global(.spb1) {
      #{$property}: $colorTransportSPbLine1;
    }
    :global(.spb2) {
      #{$property}: $colorTransportSPbLine2;
    }
    :global(.spb3) {
      #{$property}: $colorTransportSPbLine3;
    }
    :global(.spb4) {
      #{$property}: $colorTransportSPbLine4;
    }
    :global(.spb5) {
      #{$property}: $colorTransportSPbLine5;
    }

    :global(.msk5) {
      #{$property}: $colorTransportMskLine5;
    }
    :global(.msk11) {
      #{$property}: $colorTransportMskLine11;
    }
    :global(.transportColorUnknown) {
      #{$property}: $color-base500;
    }
  } @else {
    .spb1 {
      #{$property}: $colorTransportSPbLine1;
    }
    .spb2 {
      #{$property}: $colorTransportSPbLine2;
    }
    .spb3 {
      #{$property}: $colorTransportSPbLine3;
    }
    .spb4 {
      #{$property}: $colorTransportSPbLine4;
    }
    .spb5 {
      #{$property}: $colorTransportSPbLine5;
    }

    .msk5 {
      #{$property}: $colorTransportMskLine5;
    }
    .msk11 {
      #{$property}: $colorTransportMskLine11;
    }
    .transportColorUnknown {
      #{$property}: $color-base500;
    }
  }
}

@mixin expandOnHover($size: $spacing-xs) {
  --hover-expand-size: 0;

  position: relative;

  &:before {
    z-index: -1;
    content: '';
    background: inherit;
    border-radius: inherit;
    border: inherit;
    position: absolute;
    inset: var(--hover-expand-size);
    transform: translateZ(0);
    transition:
      inset $durationHoverExpand ease,
      border-radius $durationHoverExpand ease,
      border $durationHoverExpand ease,
      background $durationHoverExpand ease;
    @content;
  }
  &:hover {
    --hover-expand-size: -#{$size};
  }
}

@mixin customScrollbarBase($width: $customScrollbarWidth) {
  &::-webkit-scrollbar {
    width: $width;
  }
  &::-webkit-scrollbar-thumb {
    background: $color-secondary200;
  }
  &::-webkit-scrollbar-track {
    background: $color-secondary50;
    background-clip: content-box;
    border-radius: $radius-xs;
  }
  &::-webkit-scrollbar-corner {
    background-color: transparent;
  }
}

@mixin customScrollbar() {
  @include customScrollbarBase;

  &::-webkit-scrollbar-thumb {
    border-radius: $radius-xs;
  }
  &::-webkit-scrollbar-track {
    border: calc(($customScrollbarWidth - 4px) / 2) solid transparent; // we need to make track width = 4px
  }
}

@mixin inputScrollbar {
  @include customScrollbarBase(23px);

  &::-webkit-scrollbar-thumb {
    background-clip: content-box;
    border-radius: calc($radius-xs + $spacing-m);
    border: $spacing-m solid transparent;
  }
  &::-webkit-scrollbar-track {
    height: 15px;
    border: calc($spacing-m + 2px) solid transparent;
  }
}

@mixin animationRightToLeft {
  animation: right-to-left 3s;

  @keyframes right-to-left {
    0% {
      opacity: 0;
      left: 10px;
    }
    25% {
      opacity: 1;
      left: 0px;
    }
  }
}

@mixin shimmerAnimation($top: 0, $width: 12rem, $height: 100%) {
  @keyframes shimmer {
    0% {
      left: 0;
    }
    100% {
      left: 100%;
    }
  }

  position: relative;

  &:after {
    animation-duration: 1s;
    animation-fill-mode: forwards;
    animation-iteration-count: 1;
    animation-name: shimmer;
    animation-timing-function: linear;
    background-image:
      linear-gradient(
          90deg,
          rgba($color-base0, $opacity-0) 0%,
          rgba($color-base0, $opacity-90) 50%,
          rgba($color-base0, $opacity-0) 100%
      );
    content: '';
    height: $height;
    position: absolute;
    top: $top;
    width: $width;
    z-index: 1;
  }
};

@mixin scale {
  transform: scale(1.02);
}

@mixin imageWrap {
  overflow: hidden;
  position: absolute;
  height: 100%;
  width: 100%;
  transition: transform $durationAnimatedBanner ease;
  display: flex;
  justify-content: flex-end;
}

@mixin image {
  height: 100%;
  background-position: 100% 100%;
  background-repeat: no-repeat;
  background-size: cover;

  @include isTablet {
    background-size: contain;
  }
}

@mixin lineClamp($lineCount) {
  -webkit-line-clamp: #{$lineCount};
  line-clamp: #{$lineCount};
  overflow: hidden;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -moz-box-orient: vertical;
  text-overflow: ellipsis;
}

@mixin rotate($timing) {
  animation: spin infinite linear #{$timing}ms;

  @keyframes spin {
    0% {
      transform: rotate(0deg);
    }
    100% {
      transform: rotate(360deg);
    }
  }
}

@function colWidth($col: 1) {
  @return 100% / $themeColsCount * $col;
}
